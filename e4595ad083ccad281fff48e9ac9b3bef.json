{"posts": [{"title": "Verilog Cheat Sheet", "date": "2022-04-03T23:52:00-00.00", "path": "/Blog/archives/verilog_cheat_sheet/", "text": "\u8bb0\u5f55\u4e00\u4e0b\u5237\u9898\u8fc7\u7a0b\u4e2dVerilog\u603b\u5fd8\uff0c\u603b\u641e\u6df7\u7684\u8bed\u6cd5\uff01If Statement\nWhen there are more than one commands, add begin ... end syntax for that branch.\nif ()\nelse if()\nelse\n\nCase\nAgain add begin ... end syntax when there are more than one commands.\ncase (A)\n3&#39;b001:\n3&#39;b010:\n3&#39;b100:\ndefault:\nendcase\n\nLoop\nInside always block...\ninteger i;\nalways @(posedge clk) begin\n  for (i=1; i&lt;100; i=i+1) begin\n  end\nend\n\nOutside always block...\ngenvar i;\ngenerate\n  for (i=0; i&lt;255; i=i+1) begin loop_name\n  end\nendgenerate\n\nDuplication\nSome examples...\nassign a = {51{1&#39;b1}};\nassign b = {width{A}};\nassign {b, a[2:1], c} = {};\nassign out = {{24{in[7]}}, in}; // Sign bit extension\nassign out = {in[0], in[1], in[2], in[3]}; // Reverse\n\nOnehot\nmodule onehot(input [255:0] r1, input [7:0] addr, output out);\n  assign out = r[addr];\nendmodule\n\nMasking\nassign Q = r1[addr*4+3 -: 4];\n\nDefine a Register File\nmodule regfile(\n    input clk,\n    input we3,\n    input [4:0] ra1, ra2, wa3,\n    input [31:0] wd3,\n    output [31:0] rd1, rd2\n  );\n  reg [31:0] rf [31:0];\n\n  always @(posedge clk)\n    if (we3) rf[wa3] &lt;= wd3;\n\n  assign rd1 = (ra1!=0)? rf[ra1] : 0;\n  assign rd2 = (ra2!=0)? rf[ra2] : 0;\n\n  endmodule\n\n", "categories": [{"name": "IC Interview", "slug": "IC Interview", "permalink": "/Blog/category/IC Interview/"}], "tags": [{"name": "Verilog", "slug": "Verilog", "permalink": "/Blog/tag/Verilog/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/Blog/tag/GitHub/"}]}, {"title": "\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0", "date": "2022-04-02T16:34:00-00.00", "path": "/Blog/archives/my-first-awesome-post/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/Blog/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/Blog/tag/GitHub/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/Blog/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: hi#imalan.cn (replace # with @)\nTelegram\uff1aAlanDecode\n", "categories": [], "tags": []}]}