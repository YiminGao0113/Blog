{"posts": [{"title": "Verilog Cheat Sheet", "date": "2022-04-03T23:52:00-00.00", "path": "/Blog/archives/verilog_cheat_sheet/", "text": "\u8bb0\u5f55\u4e00\u4e0b\u5237\u9898\u8fc7\u7a0b\u4e2dVerilog\u603b\u5fd8\uff0c\u603b\u641e\u6df7\u7684\u8bed\u6cd5\uff01Interview Repo\nIf Statement\nWhen there are more than one commands, add begin ... end syntax for that branch.\nif ()\nelse if()\nelse\n\nCase\nAgain add begin ... end syntax when there are more than one commands.\ncase (A)\n3&#39;b001:\n3&#39;b010:\n3&#39;b100:\ndefault:\nendcase\n\nLoop\nInside always block...\ninteger i;\nalways @(posedge clk) begin\n  for (i=1; i&lt;100; i=i+1) begin\n  end\nend\n\nOutside always block...\ngenvar i;\ngenerate\n  for (i=0; i&lt;255; i=i+1) begin loop_name\n  end\nendgenerate\n\nDuplication\nSome examples...\n{51{1&#39;b1}}\n{width{A}}\nassign {b, a[2:1], c} = {}\nassign out = {{24{in[7]}}, in} // Sign bit extension\nassign out = {in[0], in[1], in[2], in[3]} // Reverse\n\nOnehot\nmodule onehot(input [255:0] r1, input [7:0] addr, output out);\n  assign out = r[addr];\nendmodule\n\nMasking\nassign Q = r1[addr*4+3 -: 4];\n\nDefine a Register File\nmodule regfile(\n    input clk;\n    input we3;\n    input [4:0] ra1, ra2, wa3,\n    input [31:0] wd3,\n    output [31:0] rd1, rd2\n  );\n  reg [31:0] rf [31:0];\n\n  always @(posedge clk)\n    if (we3) rf[wa3] &lt;= wd3;\n\n  assign rd1 = (ra1!=0)? rf[ra1] : 0;\n  assign rd2 = (ra2!=0)? rf[ra2] : 0;\n\n  endmodule\n\n", "categories": [{"name": "IC Interview", "slug": "IC Interview", "permalink": "/Blog/category/IC Interview/"}], "tags": [{"name": "Verilog", "slug": "Verilog", "permalink": "/Blog/tag/Verilog/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/Blog/tag/GitHub/"}]}, {"title": "\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0", "date": "2022-04-02T16:34:00-00.00", "path": "/Blog/archives/my-first-awesome-post/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\ntesttesttest\n\u5e7d\u7075\u516c\u4e3b\u5267\u7167\n\u8fd9\u662f\u4e00\u7bc7\u793a\u4f8b\u6587\u7ae0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u9875\u9762\u5143\u7d20\u7684\u663e\u793a\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u662f Markdown \u8bed\u6cd5\u7684\u53c2\u8003\u6587\u7ae0\u3002\u4fdd\u7559\u6216\u8005\u5220\u9664\u672c\u6587\uff0c\u5f00\u59cb\u81ea\u5df1\u7684\u521b\u4f5c\u5427\uff01L2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.\nWe are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.\nInline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002\nBlockquote and nested blockquote\n\u5b89\u5f97\u5e7f\u53a6\u5343\u4e07\u95f4\uff0c\u5927\u5e87\u5929\u4e0b\u5bd2\u58eb\u4ff1\u6b22\u989c\uff01\u98ce\u96e8\u4e0d\u52a8\u5b89\u5982\u5c71\u3002\n\u545c\u547c\uff01\u4f55\u65f6\u773c\u524d\u7a81\u5140\u89c1\u6b64\u5c4b\uff0c\u543e\u5e90\u72ec\u7834\u53d7\u51bb\u6b7b\u4ea6\u8db3\uff01\n\n\nCode\nInline code: int a=1;. Code block:\nint main(int argc , char** argv){\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\niPhone\niPhone X\niPhone 11\n\n\niPad\nMacBook\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:\n$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nPrincess Mononoke\nPhotoset\n\n\n\n\n\n\nTable\n\n\nheader\nheader\n\n\n\n\ncell 1\ncell 2\n\n\ncell 3\ncell 4\n\n\n\nLink Card\n\n                                  AlanDecodeHome page for AlanDecode \u21a9", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/Blog/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Blog/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/Blog/tag/GitHub/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/Blog/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: hi#imalan.cn (replace # with @)\nTelegram\uff1aAlanDecode\n", "categories": [], "tags": []}]}